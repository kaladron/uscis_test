# Deploy Flutter app to Google Play Store internal track

name: Deploy to Play Store

on:
  push:
    branches:
      - 'release/*'

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0  # Needed for proper tagging
      
      - name: Setup Java
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'  # More reliable than microsoft
          java-version: '17'
          cache: 'gradle'
      
      - name: Setup Flutter
        uses: subosito/flutter-action@v2
        with:
          channel: 'stable'
          cache: true
      
      - name: Print environment versions
        run: |
          echo "Flutter version:"
          flutter --version
          echo "Dart version:"
          dart --version
          echo "Java version:"
          java -version

      - name: Install dependencies
        run: flutter pub get

      - name: Verify formatting
        run: dart format --output=none --set-exit-if-changed .

      - name: Analyze project source
        run: flutter analyze --fatal-infos

      - name: Run tests
        run: flutter test
      
      # Decode and save the keystore file from base64
      - name: Setup keystore
        run: |
          echo "${{ secrets.SIGNING_KEY }}" | base64 --decode > android/app/upload-keystore.jks
          echo "storeFile=upload-keystore.jks" >> android/key.properties
          echo "storePassword=${{ secrets.KEY_STORE_PASSWORD }}" >> android/key.properties
          echo "keyAlias=${{ secrets.ALIAS }}" >> android/key.properties
          echo "keyPassword=${{ secrets.KEY_PASSWORD }}" >> android/key.properties
      
      - name: Build app
        run: flutter build appbundle --release
          
      - name: Tag Release
        run: |
          version_name=${GITHUB_REF##*/}
          echo "Tagging release with tag $version_name"
          git tag $version_name release/$version_name
          git push origin --tags

      - name: Clean up keystore
        if: always()
        run: |
          rm -f android/app/upload-keystore.jks
          rm -f android/key.properties
      
      # Setup service account file for Google Play deployment
      - name: Setup service account
        run: echo "${{ secrets.SERVICE_ACCOUNT_JSON }}" | base64 --decode > service_account.json
      
      - name: Deploy to Internal
        uses: r0adkll/upload-google-play@v1
        with:
          serviceAccountJson: service_account.json
          packageName: com.raspberryginger.uscis_test
          releaseFiles: build/app/outputs/bundle/release/app-release.aab
          track: internal
          whatsNewDirectory: whatsNewDirectory/
      
      - name: Clean up service account
        if: always()
        run: rm -f service_account.json
